# BashSrc auto-generated by ToolBOSCore

PROJECT_NAME="${packageName}"
FULL_VERSION="${packageVersion}"
PROJECT_START_PATH="<%text>${SIT}</%text>/${packageCategory}/${packageName}/${packageVersion}"
SIT_DEPENDENCIES=${sitDependencies}

if [[ ! "<%text>${TOOLBOSCORE_SOURCED}</%text>" =~ ${packageCategory}/${packageName}/${packageVersion} ]]
then

    # avoid multiple inclusion
    export TOOLBOSCORE_SOURCED="${packageCategory}/${packageName}/${packageVersion} <%text>${TOOLBOSCORE_SOURCED}</%text>"
%if hasLibDir:

    export LD_LIBRARY_PATH="<%text>${LD_LIBRARY_PATH}:${SIT}/</%text>${packageCategory}/${packageName}/${packageVersion}<%text>/lib/${MAKEFILE_PLATFORM}</%text>"
%endif
%if userSrcBashCode:

    %for line in userSrcBashCode:
    ${line}
    %endfor
%endif
%if userSrcEnv:

    %for key, value in userSrcEnv:
    export ${key}="${value}"
    %endfor
%endif
%if userSrcAlias:

    %for key, value in userSrcAlias:
    alias ${key}="${value}"
    %endfor
%endif

<%text>
    # source all dependencies
    for i in "${SIT_DEPENDENCIES[@]}"
    do
        if [[ ! -z $VERBOSE ]]
        then
</%text>
            echo "[${packageCategory}/${packageName}/${packageVersion}/BashSrc] Sourcing <%text>${SIT}/${i}</%text>/BashSrc"
<%text>
        fi

        source "${SIT}/${i}/BashSrc"
    done

fi

unset PROJECT_NAME
unset FULL_VERSION
unset PROJECT_START_PATH
unset SIT_DEPENDENCIES


# EOF
</%text>